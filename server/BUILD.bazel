"""Melo Web API server."""

load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

alias(
    name = "server",
    actual = ":melo-webapi",
)

#
# Gazelle for auto-generating Go targets
#

# gazelle:prefix github.com/dillya/melo-webapi
gazelle(
    name = "gazelle",
    visibility = ["//:__pkg__"],
)

#
# Go targets (auto-generated)
#

go_library(
    name = "melo-webapi_lib",
    srcs = ["main.go"],
    importpath = "github.com/dillya/melo-webapi",
    visibility = ["//visibility:private"],
    deps = [
        "//server/internal/device",
        "//server/internal/discover_legacy",
        "//server/internal/utils",
        "@com_github_danielgtaylor_huma_v2//:huma",
        "@com_github_danielgtaylor_huma_v2//adapters/humachi",
        "@com_github_go_chi_chi_v5//:chi",
        "@com_github_go_chi_cors//:cors",
        "@com_github_go_sql_driver_mysql//:mysql",
        "@com_github_sirupsen_logrus//:logrus",
    ],
)

go_binary(
    name = "melo-webapi",
    embed = [":melo-webapi_lib"],
    env = {
        "MELO_WEBAPI_MYSQL_USER": "melo-webapi",
        "MELO_WEBAPI_MYSQL_PASSWORD": "password",
        "MELO_WEBAPI_MYSQL_DATABASE": "melo-webapi",
    },
    visibility = ["//visibility:public"],
)

#
# Deployement
#

pkg_tar(
    name = "oci_layer",
    srcs = [":melo-webapi"],
    visibility = ["//visibility:private"],
)

oci_image(
    name = "oci_image",
    base = "@distroless_base",
    entrypoint = ["/melo-webapi"],
    tars = [":oci_layer"],
    visibility = ["//visibility:private"],
)

oci_tarball(
    name = "image",
    image = ":oci_image",
    repo_tags = ["melo-webapi:latest"],
)

#
# Formatting / Linting
#

# Go
# TODO(dillya): only working when executed from package directory
sh_binary(
    name = "go.fix",
    srcs = ["@rules_go//go"],
    args = ["fmt"],
    visibility = ["//:__pkg__"],
)
